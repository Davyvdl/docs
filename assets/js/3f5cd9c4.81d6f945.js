"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[8384],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(n),h=a,m=p["".concat(l,".").concat(h)]||p[h]||d[h]||s;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=p;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var u=2;u<s;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(7294),a=n(6010);const s="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(s,i),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>E});var r=n(7462),a=n(7294),s=n(6010),i=n(2466),o=n(6775),l=n(1980),u=n(7392),c=n(12);function d(e){return function(e){var t;return(null==(t=a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:t.filter(Boolean))??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function p(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function h(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const r=(0,o.k6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(s),(0,a.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(r.location.search);t.set(s,e),r.replace({...r.location,search:t.toString()})}),[s,r])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,s=p(e),[i,o]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:s}))),[l,u]=m({queryString:n,groupId:r}),[d,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,s]=(0,c.Nk)(n);return[r,(0,a.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:r}),f=(()=>{const e=l??d;return h({value:e,tabValues:s})?e:null})();(0,a.useLayoutEffect)((()=>{f&&o(f)}),[f]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),g(e)}),[u,g,s]),tabValues:s}}var f=n(2389);const b="tabList__CuJ",w="tabItem_LNqP";function v(e){let{className:t,block:n,selectedValue:o,selectValue:l,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),r=u[n].value;r!==o&&(d(t),l(r))},h=e=>{var t;let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}null==(t=n)||t.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:i}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>c.push(e),onKeyDown:h,onClick:p},i,{className:(0,s.Z)("tabs__item",w,null==i?void 0:i.className,{"tabs__item--active":o===t})}),n??t)})))}function y(e){let{lazy:t,children:n,selectedValue:r}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function k(e){const t=g(e);return a.createElement("div",{className:(0,s.Z)("tabs-container",b)},a.createElement(v,(0,r.Z)({},e,t)),a.createElement(y,(0,r.Z)({},e,t)))}function E(e){const t=(0,f.Z)();return a.createElement(k,(0,r.Z)({key:String(t)},e))}},9552:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>u,toc:()=>d});var r=n(7462),a=(n(7294),n(3905)),s=n(4866),i=n(5162);const o={sidebar_label:"Sign-In with Ethereum",sidebar_position:4},l="Sign-In with Ethereum",u={unversionedId:"guides/browser-extension/sign-in-with-ethereum",id:"guides/browser-extension/sign-in-with-ethereum",title:"Sign-In with Ethereum",description:"The LUKSO Browser Extension is compatible with EIP-4361: Sign-In with Ethereum.",source:"@site/docs/guides/browser-extension/sign-in-with-ethereum.md",sourceDirName:"guides/browser-extension",slug:"/guides/browser-extension/sign-in-with-ethereum",permalink:"/guides/browser-extension/sign-in-with-ethereum",draft:!1,editUrl:"https://github.com/lukso-network/docs/tree/main/docs/guides/browser-extension/sign-in-with-ethereum.md",tags:[],version:"current",lastUpdatedAt:1666618004,formattedLastUpdatedAt:"Oct 24, 2022",sidebarPosition:4,frontMatter:{sidebar_label:"Sign-In with Ethereum",sidebar_position:4},sidebar:"guidesSidebar",previous:{title:"Interact with a dApp",permalink:"/guides/browser-extension/interact-with-dapp"},next:{title:"Sign arbitrary messages",permalink:"/guides/browser-extension/sign-arbitrary-messages"}},c={},d=[{value:"1. Get the Universal Profile address",id:"1-get-the-universal-profile-address",level:2},{value:"2. Prepare the message",id:"2-prepare-the-message",level:2},{value:"3. Sign the message",id:"3-sign-the-message",level:2},{value:"4. Verify the signature",id:"4-verify-the-signature",level:2}],p={toc:d};function h(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sign-in-with-ethereum"},"Sign-In with Ethereum"),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"/guides/browser-extension/install-browser-extension"},"LUKSO Browser Extension")," is compatible with ",(0,a.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-4361"},"EIP-4361: Sign-In with Ethereum"),".\nTherefore, if the message you want to sign complies with this standard, the LUKSO Browser Extension will show a custom login screen."),(0,a.kt)("div",{style:{textAlign:"center"}},(0,a.kt)("img",{src:"/img/extension/lukso-extension-siwe.webp",alt:"Example of Sign-In with Ethereum screen"})),(0,a.kt)("h2",{id:"1-get-the-universal-profile-address"},"1. Get the Universal Profile address"),(0,a.kt)("p",null,"The browser extension injects the Universal Profile smart contract address into the page. We need this address to generate the message to sign."),(0,a.kt)(s.Z,{groupId:"provider",mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"ethers",label:"Ethers.js",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { ethers } from 'ethers';\n\nconst etherProvider = new ethers.providers.Web3Provider(window.ethereum);\n\nconst accountsRequest = await etherProvider.send('eth_requestAccounts', []);\nconst signer = etherProvider.getSigner();\nconst upAddress = await signer.getAddress();\n// 0x3E39275Ed3B370E074534edeE13a166512AD32aB\n"))),(0,a.kt)(i.Z,{value:"web3",label:"web3.js",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import Web3 from 'web3';\n\nconst web3 = new Web3(window.ethereum);\n\nconst accountsRequest = await web3.eth.requestAccounts();\nconst accounts = await web3.eth.getAccounts();\nconst upAddress = accounts[0];\n// 0x3E39275Ed3B370E074534edeE13a166512AD32aB\n")))),(0,a.kt)("h2",{id:"2-prepare-the-message"},"2. Prepare the message"),(0,a.kt)("p",null,"To enable the Sign-In With Ethereum (SIWE) screen, you need to prepare a message with a specific format, as you can see on the ",(0,a.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-4361"},"standard page")," or below."),(0,a.kt)("details",null,(0,a.kt)("summary",null,"SIWE Template"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"${domain} wants you to sign in with your Ethereum account:\n${address}\n\n${statement}\n\nURI: ${uri}\nVersion: ${version}\nChain ID: ${chain-id}\nNonce: ${nonce}\nIssued At: ${issued-at}\nExpiration Time: ${expiration-time}\nNot Before: ${not-before}\nRequest ID: ${request-id}\nResources:\n- ${resources[0]}\n- ${resources[1]}\n  ...\n- ${resources[n]}\n"))),(0,a.kt)("p",null,"In JavaScript, you can use the ",(0,a.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/siwe"},(0,a.kt)("inlineCode",{parentName:"a"},"siwe"))," library."),(0,a.kt)(s.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"siwe",label:"With siwe library",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { SiweMessage } from 'siwe';\n\n// ...\n\nconst message = new SiweMessage({\n  domain: window.location.host,\n  address: upAddress,\n  statement: 'By logging in you agree to the terms and conditions.',\n  uri: window.location.origin,\n  version: '1',\n  chainId: '2828', // For LUKSO L16\n  resources: ['https://terms.website.com'],\n});\n\nconst siweMessage = message.prepareMessage();\n"))),(0,a.kt)(i.Z,{value:"plain",label:"Without siwe library",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// ...\n\nconst domain = window.location.host;\nconst origin = window.location.origin;\nconst LUKSO_L16_CHAIN_ID = '2828';\nconst nonce = 'm97bdsjo'; // a randomized token, at least 8 alphanumeric characters\nconst date = new Date();\nconst issuedAt = date.toISOString();\n\nconst siweMessage = `${domain} wants you to sign in with your Ethereum account:\n\n${upAddress}\n\nBy logging in you agree to the terms and conditions.\n\nURI: ${origin}\nVersion: 1\nChain ID: ${LUKSO_L16_CHAIN_ID}\nNonce: ${nonce}\nIssued At: ${issuedAt}\nResources:\n- https://terms.website.com`;\n")))),(0,a.kt)("h2",{id:"3-sign-the-message"},"3. Sign the message"),(0,a.kt)("p",null,"Once you have access to the Universal Profile address, you can request a signature. The browser extension will sign the message with the controller key used by the extension (a smart contract can't sign)."),(0,a.kt)(s.Z,{groupId:"provider",mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"ethers",label:"Ethers.js",mdxType:"TabItem"},(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"When calling Ethers.js ",(0,a.kt)("a",{parentName:"p",href:"https://docs.ethers.io/v5/api/signer/#Signer-signMessage"},(0,a.kt)("inlineCode",{parentName:"a"},"signer.signMessage( message )")),", it uses ",(0,a.kt)("inlineCode",{parentName:"p"},"personal_sign")," RPC call under the hood. However, our extension only supports the latest version of ",(0,a.kt)("a",{parentName:"p",href:"https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign"},(0,a.kt)("inlineCode",{parentName:"a"},"eth_sign")),". Therefore, you need to use ",(0,a.kt)("inlineCode",{parentName:"p"},'provider.send("eth_sign", [upAddress, message])')," instead."),(0,a.kt)("p",{parentName:"admonition"},"You can get more information ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/MetaMask/metamask-extension/issues/15857"},"here")," and ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ethers-io/ethers.js/issues/1544"},"here"),".")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const signature = await etherProvider.send('eth_sign', [upAddress, siweMessage]);\n// 0x38c53...\n"))),(0,a.kt)(i.Z,{value:"web3",label:"web3.js",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const signature = await web3.eth.sign(siweMessage, upAddress);\n// 0x38c53...\n")))),(0,a.kt)("p",null,"\ud83c\udf89 You received the signed message. Now, you need to verify it."),(0,a.kt)("h2",{id:"4-verify-the-signature"},"4. Verify the signature"),(0,a.kt)("p",null,"Your Dapp has now received a message signed by the controller address of the Universal Profile. To finalise the login, you need to verify if the message was signed by an address which has the ",(0,a.kt)("inlineCode",{parentName:"p"},"SIGN")," permission for this UP."),(0,a.kt)("p",null,"To do so, you can use the ",(0,a.kt)("a",{parentName:"p",href:"../../standards/smart-contracts/lsp0-erc725-account#isvalidsignature"},(0,a.kt)("inlineCode",{parentName:"a"},"isValidSignature(...)"))," function to check if the signature was signed (",(0,a.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-1271"},"EIP-1271"),") by an EOA that has the ",(0,a.kt)("a",{parentName:"p",href:"../../standards/universal-profile/lsp6-key-manager#permissions"},(0,a.kt)("inlineCode",{parentName:"a"},"SIGN")," permission")," over the Universal Profile."),(0,a.kt)(s.Z,{groupId:"provider",mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"ethers",label:"Ethers.js",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import UniversalProfileContract from '@lukso/lsp-smart-contracts/artifacts/UniversalProfile.json';\n\n// ...\n\nconst myUniversalProfileContract = new ethers.Contract(upAddress, UniversalProfileContract.abi, signer);\n\nconst hashedMessage = ethers.utils.hashMessage(siweMessage);\n\nconst isValidSignature = await myUniversalProfileContract.isValidSignature(hashedMessage, signature);\n\nconst MAGIC_VALUE = '0x1626ba7e'; // https://eips.ethereum.org/EIPS/eip-1271\n\nif (isValidSignature === MAGIC_VALUE) {\n  console.log('\ud83c\udf89 Sign-In successful!');\n} else {\n  // The EOA which signed the message has no SIGN permission over this UP.\n  console.log('\ud83d\ude2d Log In failed');\n}\n"))),(0,a.kt)(i.Z,{value:"web3",label:"web3.js",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import UniversalProfileContract from '@lukso/lsp-smart-contracts/artifacts/UniversalProfile.json';\n\n// ...\n\nconst myUniversalProfileContract = new web3.eth.Contract(UniversalProfileContract.abi, upAddress);\n\nconst hashedMessage = web3.eth.accounts.hashMessage(siweMessage);\n\nconst MAGIC_VALUE = '0x1626ba7e'; // https://eips.ethereum.org/EIPS/eip-1271\n\n// if the signature is valid it should return the magic value 0x1626ba7e\nconst isValidSignature = await myUniversalProfileContract.methods.isValidSignature(hashedMessage, signature).call();\n\nif (isValidSignature === MAGIC_VALUE) {\n  console.log('\ud83c\udf89 Log In successful!');\n} else {\n  // The EOA which signed the message has no SIGN permission over this UP.\n  console.log('\ud83d\ude2d Log In failed');\n}\n")))),(0,a.kt)("p",null,"If ",(0,a.kt)("inlineCode",{parentName:"p"},"isValidSignature")," returns the magic value: ",(0,a.kt)("inlineCode",{parentName:"p"},"0x1626ba7e"),", then, the message was signed by an EOA which has a ",(0,a.kt)("inlineCode",{parentName:"p"},"SIGN")," permission for this Universal Profile."))}h.isMDXComponent=!0}}]);