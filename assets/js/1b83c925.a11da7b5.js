"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[9899],{3905:(e,t,a)=>{a.d(t,{Zo:()=>l,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),c=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},l=function(e){var t=c(e.components);return n.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=c(a),h=r,u=m["".concat(d,".").concat(h)]||m[h]||p[h]||o;return a?n.createElement(u,s(s({ref:t},l),{},{components:a})):n.createElement(u,s({ref:t},l))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=m;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=a[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},3178:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const o={sidebar_label:"ERC725",sidebar_position:1},s="ERC725",i={unversionedId:"standards/lsp-background/erc725",id:"standards/lsp-background/erc725",title:"ERC725",description:"ERC725 - General Executor and Data Key/Value Store",source:"@site/docs/standards/lsp-background/erc725.md",sourceDirName:"standards/lsp-background",slug:"/standards/lsp-background/erc725",permalink:"/standards/lsp-background/erc725",draft:!1,editUrl:"https://github.com/lukso-network/docs/tree/main/docs/standards/lsp-background/erc725.md",tags:[],version:"current",lastUpdatedAt:1656578020,formattedLastUpdatedAt:"6/30/2022",sidebarPosition:1,frontMatter:{sidebar_label:"ERC725",sidebar_position:1},sidebar:"standardsSidebar",previous:{title:"Standard Detection",permalink:"/standards/standard-detection"},next:{title:"LSP1 - Universal Receiver",permalink:"/standards/generic-standards/lsp1-universal-receiver"}},d={},c=[{value:"Introduction",id:"introduction",level:2},{value:"What does this standard represent?",id:"what-does-this-standard-represent",level:2},{value:"ERC725X - Generic Executor",id:"erc725x---generic-executor",level:3},{value:"ERC725Y - Generic Data Key/Value Store",id:"erc725y---generic-data-keyvalue-store",level:3},{value:"ERC725Y Data Representation",id:"erc725y-data-representation",level:3}],l={toc:c};function p(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"erc725"},"ERC725"),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Standard Document")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/ERC725Alliance/ERC725/blob/develop/docs/ERC-725.md"},"ERC725 - General Executor and Data Key/Value Store")))),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Using Extenrally Owned Accounts (EOA) is limiting and risky as if the private key of the account gets leaked, anyone can execute any transaction from it, transferring all assets owned by the account. Also, data cannot be attached to it and it's limited to performing the CALL and CREATE opcode."),(0,r.kt)("p",null,"In order to have a more secure account, more flexible execution on the blockchain and the ability to attach endless data, a smart contract should be used. It ensures a safe ownership process, more operations to execute and endless data store availability."),(0,r.kt)("h2",{id:"what-does-this-standard-represent"},"What does this standard represent?"),(0,r.kt)("p",null,"This standard is formed from 2 sub-standards that could be implemented stand-alone or together.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://eips.ethereum.org/EIPS/eip-173"},"ERC173"))," is used in both standards to provide ownership on the smart contract functions, where the owner could be an Externally Owned Account (EOA) or a smart contract (Another ERC725 contract, Key Manager contract, etc)."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"ERC725 Ownership",src:a(8167).Z,width:"2668",height:"1498"})),(0,r.kt)("h3",{id:"erc725x---generic-executor"},"ERC725X - Generic Executor"),(0,r.kt)("p",null,"This sub-standard enables the owner to execute generic calls on any other account, including calling contract functions and transferring native tokens along with the call. These actions are possible via the ",(0,r.kt)("a",{parentName:"p",href:"/standards/smart-contracts/lsp0-erc725-account#execute"},(0,r.kt)("inlineCode",{parentName:"a"},"execute(...)"))," function in the smart contract."),(0,r.kt)("p",null,"The ERC725X standard also enables deploying new smart contracts by providing the bytecode of the new contract to deploy as an argument to the ",(0,r.kt)("inlineCode",{parentName:"p"},"execute(...)")," function. Contracts can be deployed using either CREATE or ",(0,r.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-1014"},"CREATE2"),"."),(0,r.kt)("p",null,"The following types of calls (= operation types) are available:\n",(0,r.kt)("img",{alt:"ERC725X Operation",src:a(7556).Z,width:"3194",height:"1251"})),(0,r.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The DELEGATECALL operation is very dangrous as it can alter the state of the contract and also change owner variables at will. Additionally it can destroy the contract by calling selfdestruct on other contracts."))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Operation number"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Operation type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"0"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("a",{parentName:"td",href:"https://www.evm.codes/#f1"},(0,r.kt)("inlineCode",{parentName:"a"},"CALL"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"call another smart contract or EOA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"1"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("a",{parentName:"td",href:"https://www.evm.codes/#f0"},(0,r.kt)("inlineCode",{parentName:"a"},"CREATE"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"create a new smart contract with the associated bytecode passed as ",(0,r.kt)("inlineCode",{parentName:"td"},"data"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"2"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("a",{parentName:"td",href:"https://eips.ethereum.org/EIPS/eip-1014"},(0,r.kt)("inlineCode",{parentName:"a"},"CREATE2"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"create a new smart contract with the passed bytecode and the ",(0,r.kt)("strong",{parentName:"td"},"salt")," (for pre-computed contract addresses)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"3"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("a",{parentName:"td",href:"https://eips.ethereum.org/EIPS/eip-214"},(0,r.kt)("inlineCode",{parentName:"a"},"STATICCALL"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"call another smart contract while disallowing any modification to the state during the call")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"4"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("a",{parentName:"td",href:"https://eips.ethereum.org/EIPS/eip-7"},(0,r.kt)("inlineCode",{parentName:"a"},"DELEGATECALL"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"run the function from another contract, but use and update the storage of the current contract (= persist ",(0,r.kt)("inlineCode",{parentName:"td"},"msg.sender")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"msg.value"),")")))),(0,r.kt)("h3",{id:"erc725y---generic-data-keyvalue-store"},"ERC725Y - Generic Data Key/Value Store"),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"See the section ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://docs.soliditylang.org/en/v0.8.11/internals/layout_in_storage.html"},'"Layout of State Variables in Storage"'))," in the Solidity documentation for more information about the structure of smart contract storage."))),(0,r.kt)("p",null,"This sub-standard enables the account to hold arbitrary data through a generic data key/value store. It gives flexibility to the contract storage. Developers can access the data stored in the contract via data keys instead of referencing the storage slot where the data resides."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"ERC725Y Generic Data Key/Value Store",src:a(6061).Z,width:"2935",height:"1362"})),(0,r.kt)("p",null,"As defined below, the data keys are represented as ",(0,r.kt)("strong",{parentName:"p"},"bytes32")," and the data values are represented as ",(0,r.kt)("strong",{parentName:"p"},"bytes"),". This allows more flexibility and support for complex variable types."),(0,r.kt)("p",null,"Difference between Standard Smart Contract Storage and ERC725Y - Generic Data Key/Value Storage:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"ERC725Y Generic Data Key/Value Store",src:a(5163).Z,width:"3083",height:"1297"})),(0,r.kt)("p",null,"Once deployed on the network, the contract representing the Standard Smart Contract Storage cannot add more variables to the storage whereas ERC725Y contract can always do."),(0,r.kt)("p",null,"Thanks to ERC725Y, contracts become more interoperable, as their storage is represented in the same way. Contracts and interfaces can then read and write data from or to the storage in the same manner via the functions ",(0,r.kt)("a",{parentName:"p",href:"/standards/smart-contracts/lsp0-erc725-account#getdata"},(0,r.kt)("inlineCode",{parentName:"a"},"getData(...)"))," and ",(0,r.kt)("a",{parentName:"p",href:"/standards/smart-contracts/lsp0-erc725-account#setdata"},(0,r.kt)("inlineCode",{parentName:"a"},"setData(...)")),"."),(0,r.kt)("h3",{id:"erc725y-data-representation"},"ERC725Y Data Representation"),(0,r.kt)("p",null,"Since the data key/value pair is set in the storage as ",(0,r.kt)("strong",{parentName:"p"},"bytes32"),"/",(0,r.kt)("strong",{parentName:"p"},"bytes"),", a representation of this data should be standardized to avoid having each user writing the data in a different way and to have the ability to getData from other people contract storage in a unified way."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/standards/generic-standards/lsp2-json-schema"},"LSP2 - ERC725YJSONSchema"))," is the standard used by the LSPs to organize how the data should be represented as ",(0,r.kt)("strong",{parentName:"p"},"bytes32"),"/",(0,r.kt)("strong",{parentName:"p"},"bytes")," pairs."))}p.isMDXComponent=!0},8167:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/erc725-owner-e86a9ea416588a766ffea10783680167.jpeg"},7556:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/erc725x-operations-8d75512f3836d86c7209479332a9de8e.jpeg"},5163:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/erc725y-difference-9d0f3dd100cb9819d14a137ac8ba7bbd.jpeg"},6061:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/erc725y-16daa64f1400702764a34af747dc1e18.jpeg"}}]);