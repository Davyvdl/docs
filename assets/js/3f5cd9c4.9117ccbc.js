"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[8384],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,h=p["".concat(o,".").concat(m)]||p[m]||d[m]||s;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=p;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<s;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294),r=n(6010);const s="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(s,i),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(7462),r=n(7294),s=n(6010),i=n(2389),l=n(7392),o=n(7094),u=n(2466);const c="tabList__CuJ",d="tabItem_LNqP";function p(e){var t,n;const{lazy:i,block:p,defaultValue:m,values:h,groupId:g,className:b}=e,v=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=h?h:v.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),y=(0,l.l)(f,((e,t)=>e.value===t.value));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const k=null===m?m:null!=(t=null!=m?m:null==(n=v.find((e=>e.props.default)))?void 0:n.props.value)?t:v[0].props.value;if(null!==k&&!f.some((e=>e.value===k)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+f.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:w,setTabGroupChoices:T}=(0,o.U)(),[N,x]=(0,r.useState)(k),P=[],{blockElementScrollPositionUntilNextRender:O}=(0,u.o5)();if(null!=g){const e=w[g];null!=e&&e!==N&&f.some((t=>t.value===e))&&x(e)}const j=e=>{const t=e.currentTarget,n=P.indexOf(t),a=f[n].value;a!==N&&(O(t),x(a),null!=g&&T(g,String(a)))},E=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var a;const t=P.indexOf(e.currentTarget)+1;n=null!=(a=P[t])?a:P[0];break}case"ArrowLeft":{var r;const t=P.indexOf(e.currentTarget)-1;n=null!=(r=P[t])?r:P[P.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,s.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":p},b)},f.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>P.push(e),onKeyDown:E,onFocus:j,onClick:j},i,{className:(0,s.Z)("tabs__item",d,null==i?void 0:i.className,{"tabs__item--active":N===t})}),null!=n?n:t)}))),i?(0,r.cloneElement)(v.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function m(e){const t=(0,i.Z)();return r.createElement(p,(0,a.Z)({key:String(t)},e))}},9552:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>u,toc:()=>d});var a=n(7462),r=(n(7294),n(3905)),s=n(5488),i=n(5162);const l={sidebar_label:"Sign arbitrary messages",sidebar_position:4},o="Sign arbitrary messages",u={unversionedId:"guides/browser-extension/sign-in-with-ethereum",id:"guides/browser-extension/sign-in-with-ethereum",title:"Sign arbitrary messages",description:"1. Initialize a blockchain provider",source:"@site/docs/guides/browser-extension/sign-in-with-ethereum.md",sourceDirName:"guides/browser-extension",slug:"/guides/browser-extension/sign-in-with-ethereum",permalink:"/guides/browser-extension/sign-in-with-ethereum",draft:!1,editUrl:"https://github.com/lukso-network/docs/tree/main/docs/guides/browser-extension/sign-in-with-ethereum.md",tags:[],version:"current",lastUpdatedAt:1664393489,formattedLastUpdatedAt:"Sep 28, 2022",sidebarPosition:4,frontMatter:{sidebar_label:"Sign arbitrary messages",sidebar_position:4},sidebar:"guidesSidebar",previous:{title:"Interact with a dApp",permalink:"/guides/browser-extension/interact-with-dapp"}},c={},d=[{value:"1. Initialize a blockchain provider",id:"1-initialize-a-blockchain-provider",level:3},{value:"2. Get access to the profile address in use",id:"2-get-access-to-the-profile-address-in-use",level:3},{value:"3. Sign message",id:"3-sign-message",level:3},{value:"Verify the signature on the Universal Profile",id:"verify-the-signature-on-the-universal-profile",level:2}],p={toc:d};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"sign-arbitrary-messages"},"Sign arbitrary messages"),(0,r.kt)("h3",{id:"1-initialize-a-blockchain-provider"},"1. Initialize a blockchain provider"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"web3",label:"web3",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import Web3 from 'web3';\nimport UniversalProfileContract from '@lukso/lsp-smart-contracts/artifacts/UniversalProfile.json';\n\nconst web3 = new Web3(window.ethereum);\n"))),(0,r.kt)(i.Z,{value:"ethers",label:"ethers",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { ethers } from 'ethers';\nimport UniversalProfileContract from '@lukso/lsp-smart-contracts/artifacts/UniversalProfile.json';\n\nconst etherProvider = new ethers.providers.Web3Provider(window.ethereum);\n")))),(0,r.kt)("h3",{id:"2-get-access-to-the-profile-address-in-use"},"2. Get access to the profile address in use"),(0,r.kt)("p",null,"A call to ",(0,r.kt)("inlineCode",{parentName:"p"},"requestAccounts")," will open an extension popup to authorize an account."),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"web3",label:"web3",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const accountsRequest: string[] = await web3.eth.requestAccounts();\nconst accounts: string[] = await web3.eth.getAccounts(); //should also return the same addresses\n"))),(0,r.kt)(i.Z,{value:"ethers",label:"ethers",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const accountsRequest: string[] = await etherProvider.send(\n  'eth_requestAccounts',\n  [],\n);\nconst signer = etherProvider.getSigner();\nawait signer.getAddress(); //should also yield the same address\n"))),(0,r.kt)(i.Z,{value:"raw",label:"raw",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const accountsRequest: string[] = await window.ethereum.request({\n  method: 'eth_requestAccounts',\n  params: [],\n});\nconst accounts: string[] = await window.ethereum.request({\n  method: 'eth_accounts',\n  params: [],\n}); //should also yield the same address\n")))),(0,r.kt)("h3",{id:"3-sign-message"},"3. Sign message"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"web3",label:"web3",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const message = 'Hello World';\nconst address = web3.currentProvider.selectedAddress;\nconst signature = await web3.eth.sign(message, address);\n"))),(0,r.kt)(i.Z,{value:"ethers",label:"ethers",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const message = 'Hello World';\nconst signature = await signer.signMessage(message);\n")))),(0,r.kt)("h2",{id:"verify-the-signature-on-the-universal-profile"},"Verify the signature on the Universal Profile"),(0,r.kt)("p",null,"Because the UP is a smart contract, and the messages are usually signed by a controller account (EOA), Universal Profile has the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.lukso.tech/standards/smart-contracts/lsp0-erc725-account#isvalidsignature"},(0,r.kt)("inlineCode",{parentName:"a"},"isValidSignature(...)"))," function implemented to check if the signature was signed (",(0,r.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-1271"},"EIP-1271"),") by an EOA that has the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.lukso.tech/standards/universal-profile/lsp6-key-manager#permissions"},(0,r.kt)("inlineCode",{parentName:"a"},"SIGN")," permission")," over the Universal Profile."),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"web3",label:"web3",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const myUpAddress = '0x......';\n\nconst myUniversalProfile = new web3.eth.Contract(\n  UniversalProfileContract.abi,\n  myUpAddress,\n);\n\nconst hashedMessage = web3.utils.keccak256(message);\n\n// if the signature is valid it should return the magic value 0x1626ba7e\nconst isValidSignature = myUniversalProfile.methods.isValidSignature(\n  hashedMessage,\n  signature,\n);\n"))),(0,r.kt)(i.Z,{value:"ethers",label:"ethers",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const myUpAddress = '0x......';\n\nconst myUniversalProfile = new ethers.Contract(\n  myUpAddress,\n  UniversalProfileContract.abi,\n  signer,\n);\n\nconst hashedMessage = ethers.utils.keccak256(ethers.utils.toUtf8Bytes(message));\n\n// if the signature is valid it should return the magic value 0x1626ba7e\nconst isValidSignature = myUniversalProfile.isValidSignature(\n  hashedMessage,\n  signature,\n);\n")))),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"isValidSignature")," returns the magic value: ",(0,r.kt)("inlineCode",{parentName:"p"},"0x1626ba7e"),", then, the message was signed by an EOA which has a ",(0,r.kt)("inlineCode",{parentName:"p"},"SIGN")," permission for this Universal Profile."))}m.isMDXComponent=!0}}]);