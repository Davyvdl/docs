"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[4038],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=p(n),u=i,f=m["".concat(s,".").concat(u)]||m[u]||d[u]||r;return n?a.createElement(f,l(l({ref:t},c),{},{components:n})):a.createElement(f,l({ref:t},c))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5904:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return d}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),l=["components"],o={sidebar_position:1.3,title:"LSP7DigitalAsset"},s="LSP7DigitalAsset",p={unversionedId:"tools/lsp-factoryjs/classes/lsp7-digital-asset",id:"tools/lsp-factoryjs/classes/lsp7-digital-asset",title:"LSP7DigitalAsset",description:"deploy",source:"@site/docs/tools/lsp-factoryjs/classes/lsp7-digital-asset.md",sourceDirName:"tools/lsp-factoryjs/classes",slug:"/tools/lsp-factoryjs/classes/lsp7-digital-asset",permalink:"/tools/lsp-factoryjs/classes/lsp7-digital-asset",editUrl:"https://github.com/lukso-network/docs/tree/main/docs/tools/lsp-factoryjs/classes/lsp7-digital-asset.md",tags:[],version:"current",sidebarPosition:1.3,frontMatter:{sidebar_position:1.3,title:"LSP7DigitalAsset"},sidebar:"toolsSidebar",previous:{title:"LSP4DigitalAssetMetadata",permalink:"/tools/lsp-factoryjs/classes/lsp4-digital-asset-metadata"},next:{title:"LSP8IdentifiableDigitalAsset",permalink:"/tools/lsp-factoryjs/classes/lsp8-identifiable-digital-asset"}},c={},d=[{value:"deploy",id:"deploy",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Example",id:"example",level:4}],m={toc:d};function u(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"lsp7digitalasset"},"LSP7DigitalAsset"),(0,r.kt)("h2",{id:"deploy"},"deploy"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"lspFactory.LSP7DigitalAsset.deploy(\n  digitalAssetDeploymentOptions,\n  contractDeploymentOptions?\n);\n")),(0,r.kt)("p",null,"Deploys a mintable ",(0,r.kt)("a",{parentName:"p",href:"../../../standards/nft-2.0/LSP7-Digital-Asset"},"LSP7 Digital Asset"),"."),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"digitalAssetDeploymentOptions")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"Object"),": The ",(0,r.kt)("a",{parentName:"li",href:"../../../../../standards/smart-contracts/lsp7-digital-asset#constructor"},"constructor parameters")," used when deploying.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"string"),": The name of the token."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"symbol")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"string"),": The symbol of the token."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"controllerAddress")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"string")," : The owner of the contract."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"isNFT")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"boolean"),": Specify if the contract represent a fungible or a non-fungible token."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"digitalAssetMetadata"),"?: ",(0,r.kt)("inlineCode",{parentName:"li"},"LSP4MetadataBeforeUpload | string"),": ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-4-DigitalAsset-Metadata.md"},"LSP4 Digital Asset Metadata")," to be attached to the smart contract. Can be an encoded hex string, ipfs url or metadata object as defined in ",(0,r.kt)("a",{parentName:"li",href:"./lsp4-digital-asset-metadata#uploadMetadata"},"LSP4DigitalAssetMetadata.uploadMetadata"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"creators?")," ",(0,r.kt)("inlineCode",{parentName:"li"},"string[]"),": Array of ERC725Account ",(0,r.kt)("inlineCode",{parentName:"li"},"address"),"es that defines the creators of the digital asset. Used to set the ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-4-DigitalAsset-Metadata.md#lsp4creators"},"LSP4Creators[]")," key on the contract."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"contractDeploymentOptions?")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"Object"),": Specify contract deployment details. See ",(0,r.kt)("a",{parentName:"li",href:"../deployment/contract-deployment-options"},"Contract Deployment Options specification")," for more information.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"version?")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"string"),": The contract version you want to deploy. Defaults to latest version of ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/lukso-network/lsp-smart-contracts"},"lsp-smart-contracts library"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"byteCode?")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"string"),": The creation + runtime bytecode of the contract to deploy."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"libAddress?")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"string"),": The address of a Base Contract to be used in deployment as implementation behind a proxy contract (eg: ",(0,r.kt)("a",{parentName:"li",href:"https://eips.ethereum.org/EIPS/eip-1167"},"EIP1167"),")."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"deployReactive?")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"boolean"),": Whether to return an ",(0,r.kt)("a",{parentName:"li",href:"https://rxjs.dev/guide/observable"},"RxJS Observable")," of deployment events. Defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"deployProxy?")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"boolean"),": Whether the contract should be deployed using a proxy contract implementation (eg: ",(0,r.kt)("a",{parentName:"li",href:"https://eips.ethereum.org/EIPS/eip-1167"},"EIP1167"),"). Defaults to true."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"uploadOptions?")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"Object"),": Specify how the metadata should be uploaded.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ipfsClientOptions?")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"Object"),": IPFS Client Options as defined by the ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/ipfs/js-ipfs/tree/master/packages/ipfs-http-client#createoptions"},"ipfs-http-client library")," used internally.")))))),(0,r.kt)("p",null,"Read more about ",(0,r.kt)("inlineCode",{parentName:"p"},"contractDeploymentOptions")," specification ",(0,r.kt)("a",{parentName:"p",href:"/tools/lsp-factoryjs/deployment/contract-deployment-options"},"here")),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"DeployedLSP7DigitalAsset"),">"," | ",(0,r.kt)("inlineCode",{parentName:"p"},"Observable"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"DigitalAssetDeploymentEvent"),">"),(0,r.kt)("p",null,"Returns a Promise with object containing deployed contract details."),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"deployReactive")," flag is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"ContractDeploymentOptions")," object, returns an ",(0,r.kt)("a",{parentName:"p",href:"https://rxjs.dev/guide/observable"},"RxJS Observable")," of deployment events."),(0,r.kt)("h4",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="LSP7 Digital Asset deployment"',title:'"LSP7',Digital:!0,Asset:!0,'deployment"':!0},"await lspFactory.LSP7DigitalAsset.deploy({\n  name: 'My token',\n  symbol: 'TKN',\n  controllerAddress: '0xb74a88C43BCf691bd7A851f6603cb1868f6fc147',\n  isNFT: true,\n});\n\n/**\n{\n  LSP7DigitalAsset: {\n    address: '0x32208e331d023c2ABcdfD160Ee25B97219aEfCD9',\n    receipt: {\n      to: null,\n      from: '0x9Fba07e245B415cC9580BD6c890a9fd7D22e20db',\n      contractAddress: '0x32208e331d023c2ABcdfD160Ee25B97219aEfCD9',\n      transactionIndex: 0,\n      gasUsed: [BigNumber],\n      logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n      blockHash: '0x1b44bd472b1b202620a78847138692828149e7f692763c884d99a9adf0b8a94c',\n      transactionHash: '0xe923acc3431ef24fc11103b53b4219611d0f72e59734fc3c7db8da3eb4564844',\n      logs: [],\n      blockNumber: 12028918,\n      confirmations: 1,\n      cumulativeGasUsed: [BigNumber],\n      status: 1,\n      type: 0,\n      byzantium: true,\n      events: []\n    }\n  }\n}\n*/\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="Reactive LSP7 Digital Asset deployment"',title:'"Reactive',LSP7:!0,Digital:!0,Asset:!0,'deployment"':!0},"await lspFactory.LSP7DigitalAsset.deploy(\n  {\n    name: 'My token',\n    symbol: 'TKN',\n    controllerAddress: '0xb74a88C43BCf691bd7A851f6603cb1868f6fc147',\n    isNFT: true,\n  },\n  {\n    deployReactive: true,\n  },\n).subscribe({\n  next: (deploymentEvent) => {\n    console.log(deploymentEvent);\n  },\n  complete: () => {\n    console.log('Deployment Complete');\n  },\n});\n\n/**\n{\n  type: 'PROXY',\n  contractName: 'LSP7DigitalAsset',\n  status: 'PENDING',\n  transaction: {\n    ...\n  }\n}\n{\n  type: 'PROXY',\n  contractName: 'LSP7DigitalAsset',\n  status: 'PENDING',\n  receipt: {\n    ...\n  }\n}\n{\n  type: 'PROXY',\n  contractName: 'LSP7DigitalAsset',\n  functionName: 'initialize',\n  status: 'PENDING',\n  transaction: {\n    ...\n  }\n}\n{\n  type: 'PROXY',\n  contractName: 'LSP7DigitalAsset',\n  functionName: 'initialize',\n  status: 'COMPLETE',\n  receipt: {\n    ...\n  }\n}\nDeployment Complete\n*/\n")))}u.isMDXComponent=!0}}]);