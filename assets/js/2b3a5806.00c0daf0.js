"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[1460],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return u}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),d=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=d(a),u=r,f=m["".concat(c,".").concat(u)]||m[u]||l[u]||i;return a?n.createElement(f,s(s({ref:t},p),{},{components:a})):n.createElement(f,s({ref:t},p))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,s=new Array(i);s[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var d=2;d<i;d++)s[d]=a[d];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},1972:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return l}});var n=a(7462),r=a(3366),i=(a(7294),a(3905)),s=["components"],o={title:"Standards Detection",sidebar_position:2},c="Standards Detection",d={unversionedId:"standards/standard-detection",id:"standards/standard-detection",title:"Standards Detection",description:"The interfaceId and the SupportedStandards: key is not the most secure way to check for a standard, as they could be set manually.",source:"@site/docs/standards/standard-detection.md",sourceDirName:"standards",slug:"/standards/standard-detection",permalink:"/standards/standard-detection",editUrl:"https://github.com/lukso-network/docs/tree/main/docs/standards/standard-detection.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Standards Detection",sidebar_position:2},sidebar:"standardsSidebar",previous:{title:"Introduction",permalink:"/standards/introduction"},next:{title:"LSP1 - Universal Receiver",permalink:"/standards/generic-standards/lsp1-universal-receiver"}},p={},l=[{value:"Interface Detection",id:"interface-detection",level:2},{value:"Example",id:"example",level:3},{value:"Metadata Detection",id:"metadata-detection",level:2},{value:"Example",id:"example-1",level:3}],m={toc:l};function u(e){var t=e.components,o=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"standards-detection"},"Standards Detection"),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"interfaceId"))," and the ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"SupportedStandards:{StandardName}"))," key is not the most secure way to check for a standard, as they could be set manually."))),(0,i.kt)("p",null,"There are two types of ",(0,i.kt)("strong",{parentName:"p"},"LSP")," standards:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Interface Standards"),": Where we standardize a set of functions. i.e: ",(0,i.kt)("a",{parentName:"p",href:"/standards/universal-profile/lsp0-erc725account"},"LSP0-ERC725Account"),", ",(0,i.kt)("a",{parentName:"p",href:"/standards/universal-profile/lsp6-key-manager"},"LSP6-KeyManager"),", ",(0,i.kt)("a",{parentName:"p",href:"/standards/nft-2.0/LSP7-Digital-Asset"},"LSP7-DigitalAsset"),", etc ..")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Metadata Standards"),": Where we standardize a set of ERC725Y keys. i.e: ",(0,i.kt)("a",{parentName:"p",href:"/standards/universal-profile/lsp3-universal-profile-metadata"},"LSP3-UniversalProfile-Metadata"),", ",(0,i.kt)("a",{parentName:"p",href:"/standards/nft-2.0/LSP4-Digital-Asset-Metadata"},"LSP4-DigitalAsset-Metadata"),", ",(0,i.kt)("a",{parentName:"p",href:"/standards/universal-profile/lsp10-received-vaults"},"LSP10ReceivedVaults"),", etc."))),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",alt:"Interface and metadata standards",src:a(8022).Z,width:"3010",height:"1328"})),(0,i.kt)("p",null,"These two standards types are fundamental for interacting with smart contracts on the LUKSO blockchain."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Interface Standard")," defines the functions that can be called on a smart contract and their expected parameters. On the other hand, ",(0,i.kt)("strong",{parentName:"p"},"Metadata Standard")," informs about the data set by default on the contract and which keys to query to retrieve such data."),(0,i.kt)("h2",{id:"interface-detection"},"Interface Detection"),(0,i.kt)("div",{className:"admonition admonition-success alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"See the page ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("a",{parentName:"strong",href:"./smart-contracts/interface-ids"},"Contracts Implementation > Interface Ids"))," for a complete list of ",(0,i.kt)("inlineCode",{parentName:"p"},"interfaceId"),"s."))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"This section covers how to detect if a contract implements a specific interface.")),(0,i.kt)("p",null,"We can verify if a contract implements a specific set of functions (= an ",(0,i.kt)("strong",{parentName:"p"},"interface"),") using the function ",(0,i.kt)("inlineCode",{parentName:"p"},"supportsInterface(interfaceId)"),", passing the bytes4 ",(0,i.kt)("inlineCode",{parentName:"p"},"interfaceId")," as a parameter."),(0,i.kt)("p",null,"Calling this function will return ",(0,i.kt)("strong",{parentName:"p"},"TRUE")," if the contract implements this specific interfaceId, ",(0,i.kt)("strong",{parentName:"p"},"FALSE")," otherwise."),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("p",null,"A ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("a",{parentName:"strong",href:"/standards/universal-profile/lsp3-universal-profile-metadata"},"Universal Profile"))," is a contract based on ",(0,i.kt)("a",{parentName:"p",href:"/standards/universal-profile/lsp0-erc725account"},"ERC725Account"),"(LSP0). Therefore, the contract SHOULD implement the functions defined in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md#interface-cheat-sheet"},"ERC725Account interface"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'const UniversalProfile = require("@lukso/lsp-smart-contracts/artifacts/UniversalProfile.json");\nconst Web3 = require("web3");\n\n// Connect to the LUKSO L14 network\nconst web3 = new Web3("https://rpc.l14.lukso.network");\n\n// Create an instance of the Universal Profile\nconst myUPContract = new web3.eth.Contract(UniversalProfile.abi, "<contract-address>");\n\nconst ERC725AccountInterfaceId = \'0x63cb749b\';\nawait myUPContract.methods.supportsInterface(ERC725AccountInterfaceId).call();\n> TRUE or FALSE\n')),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"See ",(0,i.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-165"},"ERC165 - Standard Interface Detection")," for more info."))),(0,i.kt)("h2",{id:"metadata-detection"},"Metadata Detection"),(0,i.kt)("div",{className:"admonition admonition-success alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("a",{parentName:"strong",href:"https://github.com/ERC725Alliance/erc725.js/tree/develop/src/schemas"},"erc725.js"))," GitHub repository lists all the ",(0,i.kt)("inlineCode",{parentName:"p"},"SupportedStandards:{StandardName}")," keys under each ERC725Y JSON Schema."))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"This section covers how to detect if a contract contains a specific set of ERC725Y in its storage.")),(0,i.kt)("p",null,"We can verify if a contract contains a specific set of ERC725 keys (= ",(0,i.kt)("strong",{parentName:"p"},"metadata"),") by checking the value stored under the key ",(0,i.kt)("inlineCode",{parentName:"p"},"SupportedStandards:{StandardName}")," in the contract storage, via the function ",(0,i.kt)("inlineCode",{parentName:"p"},"getData([SupportedStandards:{StandardName}])"),"."),(0,i.kt)("p",null,"Calling this function will return a specific bytes4 value (defined in the Metadata Standard) if the contract has some metadata keys set by default. Otherwise, it will return an empty value."),(0,i.kt)("h3",{id:"example-1"},"Example"),(0,i.kt)("p",null,"An ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("a",{parentName:"strong",href:"/standards/nft-2.0/LSP7-Digital-Asset"},"LSP7DigitalAsset"))," is a contract that contains ERC725Y keys defined in ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("a",{parentName:"strong",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-4-DigitalAsset-Metadata.md"},"LSP4 - Digital Asset Metadata")),". Therefore, the contract ",(0,i.kt)("strong",{parentName:"p"},"SHOULD")," have the following ERC725Y keys set by default: ",(0,i.kt)("inlineCode",{parentName:"p"},"LSP4TokenName"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"LSP4TokenSymbol"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"LSP4Metadata"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"LSP4CreatorsMap:<address>")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"LSP4Creators[]"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const LSP7DigitalAsset = require('@lukso/lsp-smart-contracts/artifacts/LSP7DigitalAsset.json');\nconst Web3 = require('web3');\n\n// Connect to the LUKSO L14 network\nconst web3 = new Web3('https://rpc.l14.lukso.network');\n\n// Create an instance of the LSP7 Token\nconst myTokenContract = new web3.eth.Contract(LSP7DigitalAsset.abi, '<contract-address>');\n\nconst SupportedStandards_LSP4 = '0xeafec4d89fa9619884b6b89135626455000000000000000000000000a4d96624';\nawait myTokenContract.methods.getData([SupportedStandards_LSP4DigitalAsset]).call();\n> 0xa4d96624; // valid result according to LSP4\n")))}u.isMDXComponent=!0},8022:function(e,t,a){t.Z=a.p+"assets/images/standard-detection-dafe387cab476e81d7a9858e19b9c88a.jpeg"}}]);