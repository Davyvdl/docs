"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[3546],{3905:(e,a,t)=>{t.d(a,{Zo:()=>o,kt:()=>c});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=n.createContext({}),p=function(e){var a=n.useContext(d),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},o=function(e){var a=p(e.components);return n.createElement(d.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},g=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),g=p(t),c=r,u=g["".concat(d,".").concat(c)]||g[c]||m[c]||i;return t?n.createElement(u,s(s({ref:a},o),{},{components:t})):n.createElement(u,s({ref:a},o))}));function c(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=t.length,s=new Array(i);s[0]=g;var l={};for(var d in a)hasOwnProperty.call(a,d)&&(l[d]=a[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var p=2;p<i;p++)s[p]=t[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}g.displayName="MDXCreateElement"},7260:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=t(7462),r=(t(7294),t(3905));const i={sidebar_position:1},s="EIP191Signer",l={unversionedId:"tools/eip191-signerjs/Classes/EIP191Signer",id:"tools/eip191-signerjs/Classes/EIP191Signer",title:"EIP191Signer",description:"hashEthereumSignedMessage",source:"@site/docs/tools/eip191-signerjs/Classes/EIP191Signer.md",sourceDirName:"tools/eip191-signerjs/Classes",slug:"/tools/eip191-signerjs/Classes/EIP191Signer",permalink:"/tools/eip191-signerjs/Classes/EIP191Signer",draft:!1,editUrl:"https://github.com/lukso-network/docs/tree/main/docs/tools/eip191-signerjs/Classes/EIP191Signer.md",tags:[],version:"current",lastUpdatedAt:1666687210,formattedLastUpdatedAt:"Oct 25, 2022",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"toolsSidebar",previous:{title:"Getting Started",permalink:"/tools/eip191-signerjs/getting-started"},next:{title:"ERC725 Tools",permalink:"/tools/erc725-tools"}},d={},p=[{value:"hashEthereumSignedMessage",id:"hashethereumsignedmessage",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3},{value:"hashDataWithIntendedValidator",id:"hashdatawithintendedvalidator",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"Returns",id:"returns-1",level:3},{value:"Example",id:"example-1",level:3},{value:"signEthereumSignedMessage",id:"signethereumsignedmessage",level:2},{value:"Parameters",id:"parameters-2",level:3},{value:"Returns",id:"returns-2",level:3},{value:"Example",id:"example-2",level:3},{value:"signDataWithIntendedValidator",id:"signdatawithintendedvalidator",level:2},{value:"Parameters",id:"parameters-3",level:3},{value:"Returns",id:"returns-3",level:3},{value:"Example",id:"example-3",level:3},{value:"recover",id:"recover",level:2},{value:"Parameters",id:"parameters-4",level:3},{value:"Returns",id:"returns-4",level:3},{value:"Example",id:"example-4",level:3}],o={toc:p};function m(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},o,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"eip191signer"},"EIP191Signer"),(0,r.kt)("h2",{id:"hashethereumsignedmessage"},"hashEthereumSignedMessage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"eip191Signer.hashEthereumSignedMessage(message);\n")),(0,r.kt)("p",null,"Hashes the given message. The message will be enveloped as follows: ",(0,r.kt)("inlineCode",{parentName:"p"},"'\\x19' + '\\x45' + 'thereum Signed Message:\\n' + messageBytes.length + message")," and hashed using keccak256."),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"message")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),": A message to hash."),(0,r.kt)("h3",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"String"),": The hashed message constructed as ",(0,r.kt)("inlineCode",{parentName:"p"},"'\\x19' + '\\x45' + 'thereum Signed Message:\\n' + messageBytes.length + message")),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"eip191Signer.hashEthereumSignedMessage('Hello World');\n// '0xa1de988600a42c4b4ab089b619297c17d53cffae5d5120d82d8a92d0bb3b78f2';\n")),(0,r.kt)("h2",{id:"hashdatawithintendedvalidator"},"hashDataWithIntendedValidator"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"eip191Signer.hashDataWithIntendedValidator(validatorAddress, message);\n")),(0,r.kt)("p",null,"Hashes the given message. The message will be enveloped as follows: ",(0,r.kt)("inlineCode",{parentName:"p"},"'\\x19' + '\\x00' + validatorAddress + message")," and hashed using keccak256."),(0,r.kt)("h3",{id:"parameters-1"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"validatorAddress")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),": The address of the validator."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"message")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),": A message to hash."),(0,r.kt)("h3",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"String"),": The hashed message constructed as ",(0,r.kt)("inlineCode",{parentName:"p"},"'\\x19' + '\\x00' + validatorAddress + message")),(0,r.kt)("h3",{id:"example-1"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"eip191Signer.hashDataWithIntendedValidator(\n  0xad278a6ead89f6b6c6fdf54a3e6e876660593b45,\n  'Hello World',\n);\n// '0xa63022286ecaa3317625e319a64b3bf01c41da558dfc1890e8cb196eb414ffd5';\n")),(0,r.kt)("h2",{id:"signethereumsignedmessage"},"signEthereumSignedMessage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"eip191Signer.signEthereumSignedMessage(message, signingKey);\n")),(0,r.kt)("p",null,"Signs a message. The message passed as parameter will be wrapped as follows: ",(0,r.kt)("inlineCode",{parentName:"p"},"'\\x19' + '\\x45' + 'thereum Signed Message:\\n' + messageBytes.length + message")),(0,r.kt)("h3",{id:"parameters-2"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"message")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),": The message to sign.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"signingKey")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),": The private key to sign with."))),(0,r.kt)("h3",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Object"),": ",(0,r.kt)("strong",{parentName:"p"},"The Message object")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"message")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"String"),": The given message."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"messageHash")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"String"),": The hash of the given message constructed as ",(0,r.kt)("inlineCode",{parentName:"li"},"'\\x19' + '\\x45' + 'thereum Signed Message:\\n' + messageBytes.length + message"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"r")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"String"),": First 32 bytes of the signature."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"s")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"String"),": Next 32 bytes of the signature."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"v")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"String"),": Recovery value + 27."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"signature")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"String"),": The raw RLP encoded signature.")),(0,r.kt)("h3",{id:"example-2"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"eip191Signer.signEthereumSignedMessage(\n  'Hello World',\n  'ffeb17b9a6059fec3bbab63d76b060b7380cac7a62ce6621a134531a46458968',\n);\n/**\n{     message: 'Hello World',\n      messageHash: '0xa1de988600a42c4b4ab089b619297c17d53cffae5d5120d82d8a92d0bb3b78f2',\n      v: '0x1c',\n      r: '0x85c15865f2909897c1be6d66c1d9c86d6125978aec9e28d1a69d4d306bde694f',\n      s: '0x7cf9723f0eeaf8815e3fa984ac1d7bf3c420786ead91abd4dd9c1657897efec1',\n      signature: '0x85c15865f2909897c1be6d66c1d9c86d6125978aec9e28d1a69d4d306bde694f7cf9723f0eeaf8815e3fa984ac1d7bf3c420786ead91abd4dd9c1657897efec11c'\n    }\n*/\n")),(0,r.kt)("h2",{id:"signdatawithintendedvalidator"},"signDataWithIntendedValidator"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"eip191Signer.signDataWithIntendedValidator(\n  validatorAddress,\n  message,\n  signingKey,\n);\n")),(0,r.kt)("p",null,"Signs a message. The message passed as parameter will be wrapped as follows: ",(0,r.kt)("inlineCode",{parentName:"p"},"'\\x19' + '\\x00' + validatorAddress + message")),(0,r.kt)("h3",{id:"parameters-3"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"validatorAddress")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),": The address of the validator.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"message")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),": The message to sign.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"signingKey")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),": The private key to sign with."))),(0,r.kt)("h3",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Object"),": ",(0,r.kt)("strong",{parentName:"p"},"The Message object")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"message")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"String"),": The given message."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"messageHash")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"String"),": The hash of the given message constructed as ",(0,r.kt)("inlineCode",{parentName:"li"},"'\\x19' + '\\x00' + validatorAddress + message"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"r")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"String"),": First 32 bytes of the signature."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"s")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"String"),": Next 32 bytes of the signature."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"v")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"String"),": Recovery value + 27."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"signature")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"String"),": The raw RLP encoded signature.")),(0,r.kt)("h3",{id:"example-3"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"eip191Signer.signDataWithIntendedValidator(\n  '0xad278a6ead89f6b6c6fdf54a3e6e876660593b45',\n  'Hello World',\n  'ffeb17b9a6059fec3bbab63d76b060b7380cac7a62ce6621a134531a46458968',\n);\n/**\n    {\n      message: 'Hello World',\n      messageHash: '0xa1de988600a42c4b4ab089b619297c17d53cffae5d5120d82d8a92d0bb3b78f2',\n      v: '0x1c',\n      r: '0x85c15865f2909897c1be6d66c1d9c86d6125978aec9e28d1a69d4d306bde694f',\n      s: '0x7cf9723f0eeaf8815e3fa984ac1d7bf3c420786ead91abd4dd9c1657897efec1',\n      signature: '0x85c15865f2909897c1be6d66c1d9c86d6125978aec9e28d1a69d4d306bde694f7cf9723f0eeaf8815e3fa984ac1d7bf3c420786ead91abd4dd9c1657897efec11c'\n    }\n\n*/\n")),(0,r.kt)("h2",{id:"recover"},"recover"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"eip191Signer.recover(message, signature);\n")),(0,r.kt)("p",null,"Recovers the address which was used to sign the given message."),(0,r.kt)("h3",{id:"parameters-4"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"message")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"String|Object"),": ",(0,r.kt)("strong",{parentName:"p"},"Either signed message or Message object with the following values"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"message")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"String"),": The given message."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"messageHash")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"String"),": The hash of the given message."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"r")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"String"),": First 32 bytes of the signature."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"s")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"String"),": Next 32 bytes of the signature."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"v")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"String"),": Recovery value + 27."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"signature")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"String"),": The raw RLP encoded signature."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"signature")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),": The raw RLP encoded signature."))),(0,r.kt)("h3",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"String"),": The address used to sign the given message."),(0,r.kt)("h3",{id:"example-4"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"eip191Signer.recover(\n  'Hello World',\n  '0x1eab2de0103b8e82650f9706b17cf2adce55a335e7041bad5a94ab49c56a9c12662e80a369ffa2a6a77fbeaad1f32653cbd74860c8fbc999b1fc47b8d1cb7d931c',\n);\n// 0x4C58e78663CB5D2Bd84Dc10beDe82A7C83442a8d;\n")))}m.isMDXComponent=!0}}]);