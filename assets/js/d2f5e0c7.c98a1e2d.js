"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[7426],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return f}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),d=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=d(e.components);return n.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(a),f=r,v=u["".concat(o,".").concat(f)]||u[f]||p[f]||s;return a?n.createElement(v,i(i({ref:t},c),{},{components:a})):n.createElement(v,i({ref:t},c))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,i=new Array(s);i[0]=u;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var d=2;d<s;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},3287:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return o},metadata:function(){return d},toc:function(){return c},default:function(){return u}});var n=a(3117),r=a(102),s=(a(7294),a(3905)),i=["components"],l={sidebar_label:"LSP3 - Universal Profile - Metadata",sidebar_position:4},o="LSP3 - Universal Profile Metadata",d={unversionedId:"standards/universal-profile/lsp3-universal-profile-metadata",id:"standards/universal-profile/lsp3-universal-profile-metadata",title:"LSP3 - Universal Profile Metadata",description:"LSP3 - Universal Profile Metadata",source:"@site/docs/standards/universal-profile/03-lsp3-universal-profile-metadata.md",sourceDirName:"standards/universal-profile",slug:"/standards/universal-profile/lsp3-universal-profile-metadata",permalink:"/standards/universal-profile/lsp3-universal-profile-metadata",editUrl:"https://github.com/lukso-network/docs/tree/main/docs/standards/universal-profile/03-lsp3-universal-profile-metadata.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"LSP3 - Universal Profile - Metadata",sidebar_position:4},sidebar:"standardsSidebar",previous:{title:"LSP1 - Universal Receiver Delegate",permalink:"/standards/universal-profile/lsp1-universal-receiver-delegate"},next:{title:"LSP6 - Key Manager",permalink:"/standards/universal-profile/lsp6-key-manager"}},c=[{value:"Introduction",id:"introduction",children:[],level:2},{value:"ERC725Y Keys",id:"erc725y-keys",children:[{value:"SupportedStandards:LSP3UniversalProfile",id:"supportedstandardslsp3universalprofile",children:[],level:3},{value:"LSP3Profile",id:"lsp3profile",children:[],level:3},{value:"LSP3IssuedAssets",id:"lsp3issuedassets",children:[],level:3},{value:"LSP5ReceivedAssets",id:"lsp5receivedassets",children:[],level:3}],level:2}],p={toc:c};function u(e){var t=e.components,a=(0,r.Z)(e,i);return(0,s.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"lsp3---universal-profile-metadata"},"LSP3 - Universal Profile Metadata"),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Standard Document")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},(0,s.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-3-UniversalProfile-Metadata.md"},"LSP3 - Universal Profile Metadata")))),(0,s.kt)("h2",{id:"introduction"},"Introduction"),(0,s.kt)("p",null,"The implementation of the ",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("a",{parentName:"strong",href:"/standards/universal-profile/lsp0-erc725account"},"LSP0-ERC725Account"))," standard does not contain any metadata describing the account."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("a",{parentName:"strong",href:"#"},"LSP3-UniversalProfile-Metadata"))," is a Metadata standard that aims to define specific keys that desribes an account. A Universal Profile is a combination between ",(0,s.kt)("strong",{parentName:"p"},"LSP0-ERC725Account"),", a smart contract based account, and ",(0,s.kt)("strong",{parentName:"p"},"LSP3-UniversalProfile-Metadata"),", a set of predefined ERC725Y keys that describe the account."),(0,s.kt)("h2",{id:"erc725y-keys"},"ERC725Y Keys"),(0,s.kt)("h3",{id:"supportedstandardslsp3universalprofile"},"SupportedStandards:LSP3UniversalProfile"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "SupportedStandards:LSP3UniversalProfile",\n  "key": "0xeafec4d89fa9619884b6b89135626455000000000000000000000000abe425d6",\n  "keyType": "Mapping",\n  "valueType": "bytes4",\n  "valueContent": "0xabe425d6"\n}\n')),(0,s.kt)("p",null,"This key is used to know whether the account represents a ",(0,s.kt)("strong",{parentName:"p"},"UniversalProfile")," or a normal account."),(0,s.kt)("h3",{id:"lsp3profile"},"LSP3Profile"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "LSP3Profile",\n  "key": "0x5ef83ad9559033e6e941db7d7c495acdce616347d28e90c7ce47cbfcfcad3bc5",\n  "keyType": "Singleton",\n  "valueType": "bytes",\n  "valueContent": "JSONURL"\n}\n')),(0,s.kt)("p",null,"The value attached to this key is a JSON URL. It represents a reference to a file, stored on a centralised or decentralised storage."),(0,s.kt)("p",null,"Inside the JSON file, the keys ",(0,s.kt)("inlineCode",{parentName:"p"},"profileImage")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"backgroundImage")," can accept an array of images, each defining an image with different dimensions (width + height). This is useful for client interfaces, so that they can download and serve the image with the dimensions that is the most suitable, instead of having to re-scale it."),(0,s.kt)("h3",{id:"lsp3issuedassets"},"LSP3IssuedAssets"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "LSP3IssuedAssets[]",\n  "key": "0x3a47ab5bd3a594c3a8995f8fa58d0876c96819ca4516bd76100c92462f2f9dc0",\n  "keyType": "Array",\n  "valueContent": "Address",\n  "valueType": "address"\n}\n')),(0,s.kt)("p",null,"Universal Profiles have the capabilities to create digital assets, such as tokens and NFTs. Every token created should be registred in this array key."),(0,s.kt)("h3",{id:"lsp5receivedassets"},"LSP5ReceivedAssets"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "LSP5ReceivedAssets[]",\n  "key": "0x6460ee3c0aac563ccbf76d6e1d07bada78e3a9514e6382b736ed3f478ab7b90b",\n  "keyType": "Array",\n  "valueType": "address",\n  "valueContent": "Address"\n}\n')),(0,s.kt)("p",null,"If the UniversalProfile is used with the ",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("a",{parentName:"strong",href:"/standards/universal-profile/lsp6-key-manager"},"LSP6-KeyManager"))," and ",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("a",{parentName:"strong",href:"/standards/universal-profile/lsp1-universal-receiver-delegate"},"LSP1-UniversalReceiverDelegate")),", the received assets will be automatically registred in the storage. To know how many different asset you have you can query this key."))}u.isMDXComponent=!0}}]);