"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[7723],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=a.createContext({}),u=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},p=function(t){var e=u(t.components);return a.createElement(s.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},c=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,s=t.parentName,p=i(t,["components","mdxType","originalType","parentName"]),c=u(n),m=r,k=c["".concat(s,".").concat(m)]||c[m]||d[m]||l;return n?a.createElement(k,o(o({ref:e},p),{},{components:n})):a.createElement(k,o({ref:e},p))}));function m(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=t,i.mdxType="string"==typeof t?t:r,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1529:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const l={title:"Running a node",sidebar_position:2},o=void 0,i={unversionedId:"networks/testnet/running-a-node",id:"networks/testnet/running-a-node",title:"Running a node",description:"If you want to become a genesis validator on mainnet, prepare your validator keys and deposit LYXe using our Validator Deposit Launchpad.",source:"@site/docs/networks/testnet/running-a-node.md",sourceDirName:"networks/testnet",slug:"/networks/testnet/running-a-node",permalink:"/networks/testnet/running-a-node",draft:!1,editUrl:"https://github.com/lukso-network/docs/tree/main/docs/networks/testnet/running-a-node.md",tags:[],version:"current",lastUpdatedAt:1683039467,formattedLastUpdatedAt:"May 2, 2023",sidebarPosition:2,frontMatter:{title:"Running a node",sidebar_position:2},sidebar:"networksSidebar",previous:{title:"Network parameters",permalink:"/networks/testnet/parameters"},next:{title:"L14 Public Testnet",permalink:"/networks/l14-testnet"}},s={},u=[{value:"System Requirements",id:"system-requirements",level:2},{value:"Ports",id:"ports",level:2},{value:"Using the CLI",id:"using-the-cli",level:2},{value:"Installing",id:"installing",level:3},{value:"Initializing a working directory",id:"initializing-a-working-directory",level:3},{value:"Installing clients",id:"installing-clients",level:3},{value:"Running the testnet",id:"running-the-testnet",level:3},{value:"Documentation",id:"documentation",level:3},{value:"Need help?",id:"need-help",level:2}],p={toc:u};function d(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If you want to become a genesis validator on mainnet, prepare your validator keys and deposit LYXe using our ",(0,r.kt)("a",{parentName:"p",href:"https://deposit.mainnet.lukso.network"},"Validator Deposit Launchpad"),".")),(0,r.kt)("h1",{id:"run-a-node"},"Run a node"),(0,r.kt)("p",null,"LUKSO runs the Ethereum protocol, meaning most Ethereum clients will run the LUKSO Blockchain."),(0,r.kt)("p",null,"Currently tested execution clients are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/ethereum/go-ethereum"},"Geth"))),(0,r.kt)("p",null,"Currently tested consensus clients are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/prysmaticlabs/prysm"},"Prysm"))),(0,r.kt)("h2",{id:"system-requirements"},"System Requirements"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Settings"),(0,r.kt)("th",{parentName:"tr",align:null},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Operating System"),(0,r.kt)("td",{parentName:"tr",align:null},"Linux or MacOS")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Number of CPU cores"),(0,r.kt)("td",{parentName:"tr",align:null},"4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"RAM"),(0,r.kt)("td",{parentName:"tr",align:null},"16 GB")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SSD"),(0,r.kt)("td",{parentName:"tr",align:null},"100 GB")))),(0,r.kt)("h2",{id:"ports"},"Ports"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Port"),(0,r.kt)("th",{parentName:"tr",align:null},"Protocol"),(0,r.kt)("th",{parentName:"tr",align:null},"Client"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"30303"),(0,r.kt)("td",{parentName:"tr",align:null},"TCP"),(0,r.kt)("td",{parentName:"tr",align:null},"execution syncing"),(0,r.kt)("td",{parentName:"tr",align:null},"port must be open")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"30303"),(0,r.kt)("td",{parentName:"tr",align:null},"UDP"),(0,r.kt)("td",{parentName:"tr",align:null},"execution discovery"),(0,r.kt)("td",{parentName:"tr",align:null},"port must be open")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"13000"),(0,r.kt)("td",{parentName:"tr",align:null},"TCP"),(0,r.kt)("td",{parentName:"tr",align:null},"consensus syncing"),(0,r.kt)("td",{parentName:"tr",align:null},"port must be open")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"12000"),(0,r.kt)("td",{parentName:"tr",align:null},"UDP"),(0,r.kt)("td",{parentName:"tr",align:null},"consensus discovery"),(0,r.kt)("td",{parentName:"tr",align:null},"port must be open")))),(0,r.kt)("h2",{id:"using-the-cli"},"Using the CLI"),(0,r.kt)("p",null,"The LUKSO CLI allows you to install, run and manage clients that run the LUKSO network.\nIt also allows you to run clients as a validator."),(0,r.kt)("h3",{id:"installing"},"Installing"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The current development state can be followed in the repository of the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/tools-lukso-cli/"},"LUKSO CLI"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Download the LUKSO CLI\n$ curl https://install.lukso.network | sh\n")),(0,r.kt)("h3",{id:"initializing-a-working-directory"},"Initializing a working directory"),(0,r.kt)("p",null,"Before installing the clients, you need to create and initialize a working directory to store configs, optional validator keys, and data of your clients."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Change [directory_name] with the folder name you want\n$ mkdir [directory_name]\n\n# Change to the folder\n$ cd ./[directory_name]\n\n# Initialize the folder.\n# Creates the necessary folder struture, and downloads all network configs from https://github.com/lukso-network/network-configs\n$ lukso init\n")),(0,r.kt)("h3",{id:"installing-clients"},"Installing clients"),(0,r.kt)("p",null,"Now you can install the clients that you wish to run. These clients will install globally but are set as default clients within your working directories config. So make sure to run it within the working folder."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# within the working folder run\n$ lukso install\n")),(0,r.kt)("h3",{id:"running-the-testnet"},"Running the testnet"),(0,r.kt)("p",null,"The following command will spin up your execution and consensus client and connect to the public testnet.\nYou can see the running clients' status and logs using the ",(0,r.kt)("inlineCode",{parentName:"p"},"lukso status")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"lukso log execution")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"lukso log consensus")," commands."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ lukso start --testnet\n\n# Check the status of runningh clients\n$ lukso status\n\n# Check the logs of a running client\n$ lukso logs execution\n# Or\n$ lukso logs consensus\n\n# Stop all running clients\n$ lukso stop\n\n")),(0,r.kt)("h3",{id:"documentation"},"Documentation"),(0,r.kt)("p",null,"For more details to the commands look at the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/tools-lukso-cli/blob/main/README.md"},"README of the LUKSO CLI"),"."),(0,r.kt)("h2",{id:"need-help"},"Need help?"),(0,r.kt)("p",null,"Ask your question in the validators channel on the ",(0,r.kt)("a",{parentName:"p",href:"https://discord.gg/lukso"},"official LUKSO Discord server"),"."))}d.isMDXComponent=!0}}]);